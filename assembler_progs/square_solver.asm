JMP :BEGIN
;main ----------------------------------------------
BEGIN:                                  
; a in RAX, b in RBX, c in RCX, D in RDX, roots in sqrt eq on 1488 and 420 position

CALL :intro

CALL :INPUT_A

CALL :INPUT_B

CALL :INPUT_C

PUSH RAX
PUSH 0

JEE :SOLVE_LINEAR_EQ
JMP :SOLVE_SQUARE_EQ

SOLVE_LINEAR_EQ:
CALL :LINEAR_SOLVER
HLT

SOLVE_SQUARE_EQ:
CALL :SQUARE_SOLVER
HLT
;-------------------------------------------------

LINEAR_SOLVER:

PUSH RBX
PUSH 0

JEE :SOLVE_NOT_EQ

CALL :SOLVE_LIN
RET

SOLVE_NOT_EQ:
CALL :NOT_EQ_SOLVER
RET

;------------------------------------------------------------------
NOT_EQ_SOLVER:
PUSH RCX
PUSH 0

JEE :INF_ROOTS
JMP :NO_ROOTS

INF_ROOTS:
CALL :SHOW_INF_ROOTS
RET

NO_ROOTS:
CALL :SHOW_NO_ROOTS
RET

;---------------------------------------------------------
SOLVE_LIN:
PUSH RCX
PUSH RBX
PUSH -1
MUL
DIV

CALL :SHOW_ONE_ROOT
OUT

RET

;---------------------------------------------------------

SQUARE_SOLVER:

CALL :FIND_D

PUSH RDX 
PUSH 0
JB :NO_ROOTS_SQR

PUSH RDX
PUSH  0
JEE :ONE_ROOT_SQR

JMP :SOLVE_GEN_SQR

NO_ROOTS_SQR:
CALL :SHOW_NO_ROOTS
RET

ONE_ROOT_SQR:
CALL :DO_IT_LINEAR
CALL :SOLVE_LIN
RET

SOLVE_GEN_SQR:
CALL :FIND_ROOTS
CALL :SHOW_ONE_ROOT
PUSH [420]
OUT

CALL :SHOW_SECOND_ROOT
PUSH [1488]
OUT
RET

;---------------------------------------------------------------------------
FIND_ROOTS:

PUSH RDX
SQRT
POP RDX

PUSH RBX
PUSH -1
MUL

PUSH RDX
PUSH -1
MUL

ADD

DUP

PUSH 2
PUSH RAX
MUL
DIV

POP [420]

PUSH RDX
PUSH RDX
ADD
ADD

PUSH 2
PUSH RAX
MUL
DIV
POP [1488]

RET

;-----------------------------------------------------------------------------
DO_IT_LINEAR:

PUSH RBX
POP RCX

PUSH RAX
PUSH 2
MUL
POP RBX
RET

;----------------------------------------------------------------------------

FIND_D:
PUSH RBX
PUSH RBX
MUL

PUSH -4
PUSH RAX
PUSH RCX

MUL
MUL
ADD

POP RDX       
RET
;----------------------------------------------------------------

SHOW_ONE_ROOT:
PUSH 0      
;ONE ROOT
PUSH 10
PUSH 84
PUSH 79
PUSH 79
PUSH 82
PUSH 32
PUSH 69
PUSH 78
PUSH 79
POP [0]
POP [1]
POP [2]
POP [3]
POP [4]
POP [5]
POP [6]
POP [7]
POP [8]
POP [9]
SHOW
RET

SHOW_SECOND_ROOT:
PUSH 0      
;SECOND ROOT
PUSH 10
PUSH 84
PUSH 79
PUSH 79
PUSH 82
PUSH 32
PUSH 68
PUSH 78
PUSH 79
PUSH 67
PUSH 69
PUSH 83
POP [0]
POP [1]
POP [2]
POP [3]
POP [4]
POP [5]
POP [6]
POP [7]
POP [8]
POP [9]
POP [10]
POP [11]
POP [12]
SHOW
RET

SHOW_INF_ROOTS:
PUSH 0     
 ;INF ROOTS
PUSH 10
PUSH 83
PUSH 84
PUSH 79
PUSH 79
PUSH 82
PUSH 32
PUSH 70
PUSH 78
PUSH 73
POP [0]
POP [1]
POP [2]
POP [3]
POP [4]
POP [5]
POP [6]
POP [7]
POP [8]
POP [9]
POP [10]
SHOW
RET

SHOW_NO_ROOTS:
PUSH 0      
;NO ROOTS
PUSH 10
PUSH 83
PUSH 84
PUSH 79
PUSH 79
PUSH 82
PUSH 32
PUSH 79
PUSH 78
POP [0]
POP [1]
POP [2]
POP [3]
POP [4]
POP [5]
POP [6]
POP [7]
POP [8]
POP [9]
SHOW
RET

intro:
PUSH 0      
;input coef of ax^2 + bx + c = 0
PUSH 10
PUSH 48
PUSH 32
PUSH 61
PUSH 32
PUSH 99
PUSH 32
PUSH 43
PUSH 32
PUSH 120
PUSH 98
PUSH 32
PUSH 43
PUSH 32
PUSH 50
PUSH 94
PUSH 120
PUSH 97
PUSH 32
PUSH 102
PUSH 111
PUSH 32
PUSH 102
PUSH 101
PUSH 111
PUSH 99
PUSH 32
PUSH 116
PUSH 117
PUSH 112
PUSH 110
PUSH 105
POP [0]
POP [1]
POP [2]
POP [3]
POP [4]
POP [5]
POP [6]
POP [7]
POP [8]
POP [9]
POP [10]
POP [11]
POP [12]
POP [13]
POP [14]
POP [15]
POP [16]
POP [17]
POP [18]
POP [19]
POP [20]
POP [21]
POP [22]
POP [23]
POP [24]
POP [25]
POP [26]
POP [27]
POP [28]
POP [29]
POP [30]
POP [31]
POP [32]
SHOW
RET

INPUT_A:
PUSH 0      
;a = 
PUSH 10
PUSH 32
PUSH 61
PUSH 32
PUSH 97
POP [0]
POP [1]
POP [2]
POP [3]
POP [4]
POP [5]

SHOW
IN 
POP RAX
RET

INPUT_B:
PUSH 0      
;b = 
PUSH 10
PUSH 32
PUSH 61
PUSH 32
PUSH 98
POP [0]
POP [1]
POP [2]
POP [3]
POP [4]
POP [5]
SHOW

IN 
POP RBX
RET

INPUT_C:
PUSH 0      
;c = 
PUSH 10
PUSH 32
PUSH 61
PUSH 32
PUSH 99
POP [0]
POP [1]
POP [2]
POP [3]
POP [4]
POP [5]
SHOW

IN 
POP RCX
RET